import mongoose from "mongoose";
import User from "./Users";



const buyerSchema = new mongoose.Schema({
    buyername: String,
    buyerEmail: String,
    buyerContact: String,
    buyerdob: String,
    buyerpassport: String,
    passportexpiry: String,
    nationality: String,
    Resident: String,
    emiratesExpiry: String,
    address: String,
    emiratesid: String,
});

const invoiceSchema = new mongoose.Schema({
    Userid: { type: mongoose.Schema.Types.ObjectId, ref: 'Users' },
    Leadid: { type: mongoose.Schema.Types.ObjectId, ref: 'Leads' },
    timestamp: { type: Date, default: Date.now },
    type: String,
    buyername: String,
    buyerEmail: String,
    buyerContact: String,
    buyerdob: String,
    buyerpassport: String,
    passportexpiry: String,
    nationality: String,
    Resident: String,
    emiratesExpiry: String,
    emiratesid: String,
    address: String,
    EOI: String,
    Ready:String,
    Closure: String,
    Booking: String,
    Handover: String,
    Property: String,
    Developer: String,
    Bed: String,
    BUA: String,
    PlotArea: String,
    ProjectName: String,
    PlotNumber: String,
    Unitaddress: String,
    Price: String,
    Comission: String,
    ComissionType: String,
    SpotCash: String,
    TotalComission: String,
    VAT: String,
    ComissionVAT: String,
    othrDeveloper: String,
    External: String,
    TotalComission: String,
    passfront: String,
    passback: String,
    emiratephoto: String,
    visaphoto: String,
    eoireciept: String,
    bookingfrom: String,
    spacopy: String,
    approved: { type: String, default: '100' },
    assigneddate: String,
    loyaltyBonus: String,
    agentname: String,
    cancelreason: String,
    eoiimage: String,
    bookingmage: String,
    SPAmage: String,
    KYCimage: String,
    UNimage: String,
    Invoicenumber: String,
    Riskimage: String,
    Sanctionimage: String,
    mshreComission: Number,
    agentComissionPercent: Number,
    agentComissionAED: Number,
    mshregros: Number,
    tlComissionPercent: Number,
    tlComissionAED: Number,
    smComissionPercent: Number,
    smComissionAED: Number,
    exAgentsComissionPercent: Number,
    exAgentsComissionAED: Number,
    exTLComissionPercent: Number,
    exTLComissionAED: Number,
    exAgentsComissionPercent: Number,
    exSMComissionPercent: Number,
    exSMComissionAED: Number,
    Reasons: String,
    submittedBy: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Users' }],
    approvedby: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Users' }],
    additionalBuyers: [buyerSchema],
    buyerImages: [],
    additinalkyc: [],
    timestamp: { type: Date, default: Date.now },

});

const Invoice = mongoose.models.Invoice || mongoose.model("Invoice", invoiceSchema);

export default Invoice;